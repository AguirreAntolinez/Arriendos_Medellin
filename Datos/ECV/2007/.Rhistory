comuna,
estrato,
barrio,
area,
p14_6,
no_hogar,
p17,
p18_1,
p18_2,
p18_3,
p18_4,
p18_5,
p18_6,
p18_7,
p22,
p23,
orden
)
#Vivienda en arriendo
data_hogares<-data_hogares %>% mutate(
Vivienda_Arriendo=case_when(p22=='En Arriendo O Subarriendo'~1,.default = 0))
table(data_hogares$Vivienda_Arriendo)
data %>% group_by(noform) %>% summarise(total_personas_hogar=sum(base_encuestas))
Poblacion_Hogar<-data %>% group_by(noform) %>% summarise(total_personas_vivienda=sum(base_encuestas))
View(Poblacion_Hogar)
data_viviendas<-data_viviendas %>% left_join(Poblacion_Hogar.by='noform')
View(data_viviendas)
data_viviendas<-data_viviendas %>% left_join(Poblacion_Hogar,by='noform')
table(is.na(data_viviendas$total_personas_vivienda))
View(data_viviendas)
View(data_viviendas)
data_viviendas<-data_viviendas %>% mutate(
Paredes_Precarias=case_when(
p3=='Ladrillo - Bloque - Adobe revocado y pintado' |
p3=='Ladrillo - Bloque Forrado en piedra, madera' ~0, .default = 1),
Pisos_Precarios=case_when(
p4=='Baldosa, vinilo, tableta o ladrillo' |
p4=='Alfombra o tapete de pared a pared, mármol, parqué,  Madera' ~0, .default = 1),
Sin_Energia=case_when(p6_1=='Si posee' ~0, .default = 1),
Sin_Acueducto=case_when(p6_2=='Si posee' ~0, .default = 1),
Sin_Alcantarillado=case_when(p6_3=='Si posee' ~0, .default = 1),
Sin_Gas_Natural=case_when(p6_5=='Si posee' ~0, .default = 1),
Sin_Internet=case_when(p6_7=='Si posee' ~0, .default = 1),
Precariedad_Sanitario=case_when(p15=='Inodoro conectado a alcantarillado' ~0, .default =1),
Precariedad_Hacinamiento=case_when(total_personas_vivienda/p14_6>3 ~1,.default = 0),
Precariedad_Vivienda=
Paredes_Precarias+
Pisos_Precarios+
Sin_Energia+
Sin_Acueducto+
Sin_Alcantarillado+
Sin_Gas_Natural+
Sin_Internet+
Precariedad_Sanitario+
Precariedad_Hacinamiento
)
table(data_viviendas$Precariedad_Hacinamiento)
#Base de viviendas
data_viviendas<-data_viviendas %>% mutate(base_viviendas=1)
variables_viviendas<-data_viviendas %>%
group_by(barrio) %>%
summarise(
Base_Viviendas=sum(base_viviendas),
Apartamentos=sum(Apartamento),
Casa=sum(Casa),
Cuarto=sum(Cuarto),
Rancho_Vivienda_De_Desechos=sum(Rancho_Vivienda_De_Desechos),
Edificacion_No_Desintada_Para_Habitacion=sum(Edificacion_No_Desintada_Para_Habitacion),
Paredes_Precarias=sum(Paredes_Precarias),
Pisos_Precarios=sum(Pisos_Precarios),
Sin_Energia=sum(Sin_Energia),
Sin_Acueducto=sum(Sin_Acueducto),
Sin_Alcantarillado=sum(Sin_Alcantarillado),
Sin_Gas_Natural=sum(Sin_Gas_Natural),
Sin_Internet=sum(Sin_Internet),
Precariedad_Sanitario=sum(Precariedad_Sanitario),
Precariedad_Hacinamiento=sum(Precariedad_Hacinamiento),,
Promedio_Precariedad=mean(Precariedad_Vivienda))
data_hogares<-data_hogares %>% mutate(base_hogares=1)
mean(data_hogares$p23)
variables_hogares<-data_hogares %>%
group_by(barrio) %>%
summarise(
Base_Hogares=sum(base_hogares),
Vivienda_Arriendo=sum(Vivienda_Arriendo),
Promedio_Viviendo_En_Vivienda=mean(p23),
Estrato_Promedio=mean(estrato))
View(variables_viviendas)
#Armar la data
data_hogares<-data_hogares %>% mutate(base_hogares=1)
variables_hogares<-data_hogares %>%
group_by(barrio) %>%
summarise(
Base_Hogares=sum(base_hogares),
Hogares_Viviendo_Arriendo=sum(Vivienda_Arriendo),
Promedio_Hogar_Viviendo_En_Vivienda=mean(p23),
Estrato_Promedio=mean(estrato))
View(variables_hogares)
4+14+16
variables<-variables_personas %>%
left_join(variables_viviendas, by='barrio') %>%
left_join(variables_hogares, by='barrio')
View(variables)
variables<-variables %>% mutate(Medicion=2004)
View(variables)
writexl::write_xlsx(variables,"C:/Users/HP-Laptop/OneDrive - Universidad de Antioquia/Maestría en Economía/Tesis/1. Procesamiento/Data/DATOS ECV/Alcaldia de Medellín/Preprocesados/Variables_ECV_2004.xlsx")
names(variables)
as.data.frame(names(variables))
tabla<-as.data.frame(names(variables))
View(tabla)
library(tidyverse)
library(ggridges)
install.packages("ggridges")
library(tidyverse)
library(ggridges)
library(broom)
library(faux)
install.packages("faux")
library(tidyverse)
library(ggridges)
library(broom)
library(faux)
set.seed(1234)
N<- 1000000
income_aut<-100
effect<-10
df<-tibble(
educ=rnorm(N,mean=11,sd=9),
u=rnorm(N,mean=0,sd=36),
income=income_aut+ effect+u) %>%
mutate(
niv_edu=case_when(educ<=5 ~ 0, # "sin educacion"
educ >5 & educ <=9~ 5,
educ >9 & educ <=11~ 9,
educ >11 & educ <=16~ 11,
educ >16 & educ <=18~ 16,
educ >18 & educ <=20~ 18,
educ >20 ~ 20)
)
View(df)
mean(df$educ)
mean(df$U)
mean(df$u)
mean(df$educ)
mean(df$income)
sd(df$educ)
sd(df$u)
sd(df$niv_edu)
sd(df$income)
11+5+2+1
ggplot(df)+
geom_histogram(aes(income), bins=100, color="white", fill="green", alpha=0.5)+
geom_histogram(aes(educ), bins=100, color="white", fill="orange", alpha=0.5)+
geom_histogram(aes(u), bins=100, color="white", fill="blue", alpha=0.5)+
theme_minimal()
df %>% ggplot() +
geom_histogram(aes(income), bins=100, color="white", fill="green", alpha=0.5)+
geom_histogram(aes(educ), bins=100, color="white", fill="orange", alpha=0.5)+
geom_histogram(aes(u), bins=100, color="white", fill="blue", alpha=0.5)+
theme_minimal()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_classic()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_dark()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_linedraw()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_bw()
library(ggthemes)
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_stata()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_economist()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_economist_white()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_excel()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_base()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_gdocs()
df %>% ggplot()+
aes(x=u,y=niv_edu, group = niv_edu)+
geom_density_ridges(alpha=0.3)+
coord_flip()+
theme_clean()
n_sample=10000
reg<-list()
for(i in (1:1000)){
df_sample<-df[sample(nrow(df),n_sample),]
reg[[i]]<-lm(income~educ, data=df_sample) %>%
tidy(conf.int=TRUE) %>%
filter(term=="educ") %>%
select(~term)
}
for(i in (1:1000)){
df_sample<-df[sample(nrow(df),n_sample),]
reg[[i]]<-lm(income~educ, data=df_sample) %>%
tidy(conf.int=TRUE) %>%
filter(term=="educ") %>%
select(-term)
}
View(reg)
reg<- bind_rows(reg) %>%
rownames_to_column(var="reg")
media<-mean(reg$estimate, na.rm = TRUE)
reg %>% ggplot() +
geom_histogram(aes(estimate), bins=100, color="white", fill="green", alpha=0.5)+
theme(minimal)
reg %>% ggplot() +
geom_histogram(aes(estimate), bins=100, color="white", fill="green", alpha=0.5)+
theme_minimal()
reg %>% ggplot() +
geom_histogram(aes(estimate), bins=100, color="white", fill="green", alpha=0.5)+
geom_line(aes(media))+
theme_minimal()
reg %>% ggplot() +
geom_histogram(aes(estimate), bins=100, color="white", fill="green", alpha=0.5)+
theme_minimal()
library(readxl)
seriescol <- read_excel("C:/Users/HP-Laptop/OneDrive - Universidad de Antioquia/Maestría en Economía/Procesos estocasticos/seriescol.xls")
View(seriescol)
library(tidyverse)
seriescol <- read_excel("C:/Users/HP-Laptop/OneDrive - Universidad de Antioquia/Maestría en Economía/Procesos estocasticos/seriescol.xls")
View(seriescol)
seriescol<-seriescol %>% mutate(Year=ts(Year,freq=1,start=1905))
names(seriescol)
seriescol<-seriescol %>% mutate(PEA=ts(PEA,freq=1,start=1905),
capital=ts(capital,freq=1,start=1905),
PIB=ts(PIB,freq=1,start=1905))
plot(x = seriescol$Year,y = seriescol$Year)
plot.ts(x = seriescol$Year,y = seriescol$Year)
seriescol <- read_excel("C:/Users/HP-Laptop/OneDrive - Universidad de Antioquia/Maestría en Economía/Procesos estocasticos/seriescol.xls")
#Graficar las series de PIB, Capital y Trabajo
seriescol<-seriescol %>% mutate(PEA=ts(PEA,freq=1,start=1905),
capital=ts(capital,freq=1,start=1905),
PIB=ts(PIB,freq=1,start=1905))
plot.ts(x = seriescol$Year,y = seriescol$Year)
plot.ts(x = seriescol$Year,y = seriescol$Year, xy.labels = F)
plot.ts(x = seriescol$Year,y = seriescol$Year, xy.labels = F, xy.lines = T)
plot.ts(x = seriescol$Year,y = seriescol$Year, xy.labels = F, xy.lines = F)
plot.ts(x = seriescol$PEA)
plot.ts(x = seriescol$PEA, ylab="PEA", xlab="Año",main="PEA de Colombia")
plot.ts(x = seriescol$PEA, ylab="PEA", xlab="Año",main="Evloución PEA de Colombia", col=blues9)
plot.ts(x = seriescol$PEA, ylab="PEA", xlab="Año",main="Evloución PEA de Colombia", col="blues9")
plot.ts(x = seriescol$PEA, ylab="PEA", xlab="Año",main="Evloución PEA de Colombia", col="blue")
plot.ts(x = seriescol$capital, ylab="Capital", xlab="Año",main="Evolución Capital de Colombia", col="blue")
plot.ts(x = seriescol$PIB, ylab="PIB", xlab="Año",main="Evolución PIB de Colombia", col="blue")
acf(seriescol$PEA)
acf(seriescol$PEA,mean="Corelograma PEA")
seriescol %>% acf(PEA)
seriescol %>% acf()
seriescol %>% select(PEA) %>% acf()
seriescol %>% select(PEA) %>% acf()
seriescol %>% select(capital) %>% acf()
seriescol %>% select(PIB) %>% acf()
seriescol<-seriescol %>% mutate(
dPEA=diff(PEA),
dCapital=diff(capital),
dPIB=diff(PIB)
)
View(seriescol)
rlang::last_trace()
View(seriescol)
seriescol<-seriescol %>% mutate(
dPEA=diff(PEA),
dCapital=diff(capital),
dPIB=diff(PIB)
)
dseriescol<-seriescol %>% mutate(
dPEA=diff(PEA),
dCapital=diff(capital),
dPIB=diff(PIB)
)
seriescol %>% mutate(
dPEA=diff(PEA)
)
diff(seriescol$PEA)
dPEA<-diff(seriescol$PEA)
dPIB<-diff(seriescol$PIB)
dCapital<-diff(seriescol$capital)
dVar<-as.data.frame(dPEA,dCapital,dPIB)
dVar<-data.frame(dPEA,dCapital,dPIB)
dVar<-dVar %>% mutate(Year=c(1906:2004)) %>% left_join(seriescol, by = "Year")
View(dVar)
dVar %>% select(PEA,dPEA) %>% acf()
dVar %>% select(PEA,dPEA) %>% acf()
dVar %>% select(capital,dCapital) %>% acf()
dVar %>% select(PIB,dPIB) %>% acf()
View(dVar)
plot.ts(x = dVar$PEA, ylab="Primera diferencia PEA", xlab="Año",main="Primera diferencia PEA de Colombia", col="blue")
plot.ts(x = dVar$capital, ylab="Primera diferencia", xlab="Año",main="Primera diferencia Capital de Colombia", col="blue")
plot.ts(x = dVar$PIB, ylab="Primera diferencia PIB", xlab="Año",main="Primera diferencia PIB de Colombia", col="blue")
plot.ts(x = dVar$dPEA, ylab="Primera diferencia PEA", xlab="Año",main="Primera diferencia PEA de Colombia", col="blue")
plot.ts(x = dVar$dCapital, ylab="Primera diferencia", xlab="Año",main="Primera diferencia Capital de Colombia", col="blue")
plot.ts(x = dVar$dPIB, ylab="Primera diferencia PIB", xlab="Año",main="Primera diferencia PIB de Colombia", col="blue")
dVar %>% select(PEA,dPEA) %>% acf()
dVar %>% select(capital,dCapital) %>% acf()
dVar %>% select(PIB,dPIB) %>% acf()
library(tseries)
adVar %>% select(PEA) %>% adf.test()
dVar %>% select(PEA) %>% adf.test()
dVar %>% adf.test(PEA)
adf.test(seriescol$PEA)
dfPEA<-adf.test(seriescol$PEA)
dfPEA$parameter
dfPEA$data.name
dfPEA$parameter
dfPEA$alternative
#Pruebas de Dickey Fuller
pruebas<-list(
PEA=adf.test(seriescol$PEA),
dPEA=adf.test(dVar$dPEA)
capita=adf.test(seriescol$capital),
#Pruebas de Dickey Fuller
pruebas<-list(
PEA=adf.test(seriescol$PEA),
dPEA=adf.test(dVar$dPEA),
capita=adf.test(seriescol$capital),
dCapital=adf.test(dVar$dCapital),
PIB=adf.test(seriescol$PIB),
dPIB=adf.test(dVar$dPIB))
pruebas<-data.frame(Serie=names(pruebas),
Statisctic=sapply(pruebas, function(x) x$statistic),
'P-Value'=sapply(pruebas, function(x) x$p.value),
'Lag order'=sapply(pruebas, function(x) x$parameter),
'Alternative hypotesis'='Stationary')
View(pruebas)
length(pruebas)
pruebas<-data.frame(Serie=names(pruebas),
#Pruebas de Dickey Fuller
pruebas<-list(
PEA=adf.test(seriescol$PEA),
dPEA=adf.test(dVar$dPEA),
capita=adf.test(seriescol$capital),
dCapital=adf.test(dVar$dCapital),
PIB=adf.test(seriescol$PIB),
dPIB=adf.test(dVar$dPIB))
pruebas<-data.frame(Serie=names(pruebas),
#Pruebas de Dickey Fuller
pruebas<-list(
PEA=adf.test(seriescol$PEA),
dPEA=adf.test(dVar$dPEA),
capita=adf.test(seriescol$capital),
dCapital=adf.test(dVar$dCapital),
PIB=adf.test(seriescol$PIB),
dPIB=adf.test(dVar$dPIB))
pruebas<-data.frame(Serie=names(pruebas),
pruebas<-data.frame(Serie=names(pruebas),
pruebas<-data.frame(Serie=names(pruebas),
Statisctic=sapply(pruebas, function(x) x$statistic),
'P-Value'=sapply(pruebas, function(x) x$p.value),
'Lag order'=sapply(pruebas, function(x) x$parameter),
'Alternative hypotesis'='Stationary',
row.names = c(1:length(pruebas))
)
)
pruebas<-data.frame(Serie=names(pruebas),
Statisctic=sapply(pruebas, function(x) x$statistic),
'P-Value'=sapply(pruebas, function(x) x$p.value),
'Lag order'=sapply(pruebas, function(x) x$parameter),
'Alternative hypotesis'='Stationary',
row.names = c(1:length(pruebas)))
View(pruebas)
View(pruebas)
View(dfPEA)
y<-rnorm(1000000, mean=4,sd=50)
L<-diff(y)
e<-rnorm(1000000, mean=0,sd=2)
u=25000
y_t<-u+(1+0.54*L)^-1*e
y[1:1000000]
y_t<-u+(((1+0.54*L)^(-1))*e)
plot.ts(x = y_t, col="blue")
plot.ts(x = y, col="blue")
L<-lag(y,n=1)
y<-rnorm(1000000, mean=4,sd=50)
L<-lag(y,n=1)
e<-rnorm(1000000, mean=0,sd=2)
u<-25000
y_t<-u+(((1+0.54*L)^(-1))*e)
plot.ts(x = y, col="blue")
plot.ts(x = y_t, col="blue")
set.seed(1234)
#y_t=u+(1+0.54L)^-1*e_t
periodos<-1000000
u<-25000
phi<-0.54
e<-rnorm(periodos, mean=0,sd=2)
y_t<-numeric(periodos)
for (t in 1:periodos){
y_t[t]<-u
for(i in 0:(t-1)){
y_t<-y_t[t]+ phi^i * e_t[t-i]
}
}
e_t<-rnorm(periodos, mean=0,sd=2)
for (t in 1:periodos){
y_t[t]<-u
for(i in 0:(t-1)){
y_t<-y_t[t]+ phi^i * e_t[t-i]
}
}
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
plot(x = y_t, col="blue")
plot(x = y_t,type="1" col="blue")
plot(x = y_t,type="1", col="blue")
plot(y_t,type="1", col="blue")
plot(y_t, type = "l", main = "Simulación del Proceso Generador de Datos", ylab = "y_t", xlab = "Tiempo")
periodos<-1000000
u<-1.5
phi<-0.54
e_t<-rnorm(periodos)
y_t<-numeric(periodos)
for (t in 1:periodos){
y_t[t]<-u
for(i in 0:(t-1)){
y_t[t]<-y_t[t]+ phi^i * e_t[t-i]
}
}
source("~/.active-rstudio-document", echo=TRUE)
library(readxl)
data <- read_excel("C:/Users/HP-Laptop/Downloads/Base de datos Encuesta Calidad de Vida 2007.xlsx")
View(data)
setwd("C:/Users/HP-Laptop/OneDrive - Universidad de Antioquia/Maestría en Economía/Tesis/1. Procesamiento/Arriendos_Medellin/Datos/ECV/2007")
# Definir el tamaño del bloque
tamaño_bloque <- 9500
# Calcular el número total de bloques
n_bloques <- ceiling(nrow(data) / tamaño_bloque)
# Dividir los datos y guardarlos en archivos CSV
for (i in seq_len(n_bloques)) {
# Definir el índice inicial y final para cada bloque
inicio <- (i - 1) * tamaño_bloque + 1
fin <- min(i * tamaño_bloque, nrow(data))
# Extraer el bloque
bloque <- data[inicio:fin, ]
# Definir el nombre del archivo CSV
nombre_archivo <- sprintf("ECV_2007_%03d.csv", i)
# Guardar el bloque en un archivo CSV con codificación UTF-8
write.csv(bloque, nombre_archivo, row.names = FALSE, fileEncoding = "UTF-8")
}
source("C:/Users/HP-Laptop/OneDrive - Universidad de Antioquia/Maestría en Economía/Tesis/1. Procesamiento/Scripts/Importar datas.R", echo=TRUE)
source("C:/Users/HP-Laptop/OneDrive - Universidad de Antioquia/Maestría en Economía/Tesis/1. Procesamiento/Scripts/Preprocesamiento ECV consolidada.R", echo=TRUE)
View(bases_frecuencias)
ECV[["ECV_2007"]]<-ECV[["ECV_2007"]] %>%
mutate(
factorExpPersonas=fa2007persona,
factorExpHogares=fa2007Hogares,
factorExpViviendas=fa2007Viviendas,
skVivienda=paste0(medicion,"_",NO),
skHogar=paste0(skVivienda,"_",N_hogar)
)
data_consolidada<-do.call(rbind,lapply(ECV,function(df) df[,variables,drop=FALSE]))
#Revisión de bases y frecuencias
bases_frecuencias<-data_consolidada %>%
mutate(base_personas=1) %>%
group_by(medicion) %>%
summarise(
Base_Personas=sum(base_personas),
Poblacion=sum(as.numeric(factorExpPersonas)),
Base_Viviendas= n_distinct(skVivienda),
Base_Hogares= n_distinct(skHogar)
)
Viviendas<-data_consolidada %>%
group_by(medicion,factorExpViviendas) %>%
summarise(Viviendas=sum(as.numeric(factorExpViviendas))) %>%
group_by(medicion) %>%
summarise(Viviendas=sum(Viviendas))
Hogares<-data_consolidada %>%
group_by(medicion,factorExpHogares) %>%
summarise(Hogares=sum(as.numeric(factorExpHogares))) %>%
group_by(medicion) %>%
summarise(Hogares=sum(Hogares))
bases_frecuencias<-bases_frecuencias %>%
left_join(Viviendas,by="medicion") %>%
left_join(Hogares,by="medicion")
View(data_consolidada)
View(bases_frecuencias)
source("https://raw.githubusercontent.com/AguirreAntolinez/Arriendos_Medellin/main/Scripts/Importar%20datas.R")
